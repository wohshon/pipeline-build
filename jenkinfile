node {
  //stage 'Git checkout'
  //echo 'Checking out repo'

  stage 'Deploy in Development'
  echo ' Deploy apps in development'
  deployDev('myapp-dev')

  stage 'Automated tests'
  echo 'This stage simulates automated tests'
  sleep 30
sh " curl -I http://cakephp-example-myapp-dev.ocp3.pubkube.net"
  stage 'Deploy to QA'
  echo 'Deploying to QA'
  deployApp('myapp-dev', 'myapp-qa','qa')

  stage 'Wait for approval'
  input 'Aprove to production?'

  stage 'Deploy to production'
  echo 'Deploying to production'
  deployApp('myapp-dev', 'myapp-prod', 'prod')

  stage 'Deploy to Secondary Cloud Using Ansible Tower'
  echo 'deploy to 2nd OCP cluster via Ansible Tower'
  callAT()
}

// Login and set the project
def projectSet(String project){
    //Use a credential called openshift-dev
    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'myCred', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
        sh "oc login --insecure-skip-tls-verify=true -u $env.USERNAME -p $env.PASSWORD https://ocp3.pubkube.net"
    }
    sh "oc new-project ${project} || echo 'Project exists'"
    sh "oc project ${project}"
}
// Creates a deployment in dev, you should have already deploy manually so that the image is there
def deployDev(String project){
    projectSet(project)
    sh "oc policy add-role-to-user edit system:serviceaccount:ci-cd:default -n ${project}"
//    sh "oc new-build --name=cakephp-example openshift/php:5.6~https://github.com/wohshon/cakephp-ex -n ${project} || echo 'Build Exist!'"
    sh "oc new-build --name=nodejs-ex openshift/nodejs~https://github.com/wohshon/nodejs-ex -n ${project} || echo 'Build Exist!'"
    sh "oc start-build nodejs-ex  -n ${project} --wait"
    sleep 30
    sh "oc new-app --image-stream=${project}/nodejs-ex:latest -n ${project} || echo 'Application exist!'"
    sh "oc expose svc nodejs-ex -n ${project} || echo 'route already exist'"
}

// Tag the ImageStream from an original project to force a deployment
def deployApp(String origProject, String project, String tagname){
    projectSet(project)
    sh "oc policy add-role-to-user edit system:serviceaccount:ci-cd:default -n ${project}"
    sh "oc policy add-role-to-group system:image-puller system:serviceaccounts:ci-cd -n ${origProject}"
    sh "oc policy add-role-to-group system:image-puller system:serviceaccounts:${project} -n ${origProject}"
    sh "oc tag ${origProject}/nodejs-ex:latest ${project}/nodejs-ex:${tagname}"
    sh "oc new-app --image-stream=${project}/nodejs-ex:${tagname} -n ${project} || echo 'Application already exist'"
    sleep 10
    sh "oc expose svc nodejs-ex -n ${project} || echo 'route already exist'"
}

def callAT(){
//     projectSet('app1-dev')
//     sh "oc delete all --selector=app=nodejs-demo -n  app1-dev"
     ansibleTower(
            towerServer: 'ansibleTower',
            templateType: 'job',
            jobTemplate: 'ocp_continuous_deployment',
            importTowerLogs: true,
            inventory: 'ocp_cicd_demo',
            jobTags: '',
            skipJobTags: '',
            limit: '',
            removeColor: false,
            verbose: true,
            credential: '',
            extraVars: '''---
            my_var:  "Jenkins Test"'''
        )

}

